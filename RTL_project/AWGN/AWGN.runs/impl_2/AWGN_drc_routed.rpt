Copyright 1986-2016 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------
| Tool Version : Vivado v.2016.2 (win64) Build 1577090 Thu Jun  2 16:32:40 MDT 2016
| Date         : Mon Aug 29 14:58:03 2016
| Host         : Compy-PC running 64-bit Service Pack 1  (build 7601)
| Command      : report_drc -file AWGN_drc_routed.rpt -pb AWGN_drc_routed.pb
| Design       : AWGN
| Device       : xc7vx485tffg1157-1
| Speed File   : -1
------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 109

2. REPORT DETAILS
-----------------
NSTD-1#1 Critical Warning
Unspecified I/O Standard  
152 out of 152 logical ports use I/O standard (IOSTANDARD) value 'DEFAULT', instead of a user assigned specific value. This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all I/O standards. This design will fail to generate a bitstream unless all logical ports have a user specified I/O standard value defined. To allow bitstream creation with unspecified I/O standard values (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks NSTD-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. Problem ports: awgn_out1[15:0], awgn_out2[15:0], urng_seed1[31], urng_seed1[30], urng_seed1[29], urng_seed1[28], urng_seed1[27], urng_seed1[26], urng_seed1[25], urng_seed1[24], urng_seed1[23], urng_seed1[22], urng_seed1[21], urng_seed1[20], urng_seed1[19] (the first 15 of 122 listed).
Related violations: <none>

UCIO-1#1 Critical Warning
Unconstrained Logical Port  
152 out of 152 logical ports have no user assigned specific location constraint (LOC). This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all pin locations. This design will fail to generate a bitstream unless all logical ports have a user specified site LOC constraint defined.  To allow bitstream creation with unspecified pin locations (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks UCIO-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run.  Problem ports: awgn_out1[15:0], awgn_out2[15:0], urng_seed1[31], urng_seed1[30], urng_seed1[29], urng_seed1[28], urng_seed1[27], urng_seed1[26], urng_seed1[25], urng_seed1[24], urng_seed1[23], urng_seed1[22], urng_seed1[21], urng_seed1[20], urng_seed1[19] (the first 15 of 122 listed).
Related violations: <none>

CFGBVS-1#1 Warning
Missing CFGBVS and CONFIG_VOLTAGE Design Properties  
Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP awgn_out1__0 input awgn_out1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP awgn_out1__0 input awgn_out1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP awgn_out2__0 input awgn_out2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP awgn_out2__0 input awgn_out2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP cos_module/yt_cos0 input cos_module/yt_cos0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP cos_module/yt_cos0 input cos_module/yt_cos0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP cos_module/yt_sin0 input cos_module/yt_sin0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP cos_module/yt_sin0 input cos_module/yt_sin0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP log_module/xc1t input log_module/xc1t/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP log_module/xc1t__0 input log_module/xc1t__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP log_module/xc1t__1 input log_module/xc1t__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP log_module/xx_bt input log_module/xx_bt/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP log_module/xx_bt input log_module/xx_bt/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP log_module/xx_bt__0 input log_module/xx_bt__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#15 Warning
Input pipelining  
DSP log_module/xx_bt__0 input log_module/xx_bt__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#16 Warning
Input pipelining  
DSP log_module/xx_bt__1 input log_module/xx_bt__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#17 Warning
Input pipelining  
DSP log_module/xx_bt__1 input log_module/xx_bt__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#18 Warning
Input pipelining  
DSP log_module/xx_bt__2 input log_module/xx_bt__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#19 Warning
Input pipelining  
DSP log_module/xx_bt__2 input log_module/xx_bt__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#20 Warning
Input pipelining  
DSP log_module/xx_bt__3 input log_module/xx_bt__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#21 Warning
Input pipelining  
DSP log_module/xx_bt__3 input log_module/xx_bt__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#22 Warning
Input pipelining  
DSP log_module/xxc2t input log_module/xxc2t/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#23 Warning
Input pipelining  
DSP log_module/xxc2t__0 input log_module/xxc2t__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#24 Warning
Input pipelining  
DSP sqrt_module/y_ft input sqrt_module/y_ft/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#25 Warning
Input pipelining  
DSP sqrt_module/y_ft input sqrt_module/y_ft/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#26 Warning
Input pipelining  
DSP sqrt_module/y_ft input sqrt_module/y_ft/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP awgn_out1__0 output awgn_out1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP awgn_out2__0 output awgn_out2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP cos_module/yt_cos0 output cos_module/yt_cos0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP cos_module/yt_sin0 output cos_module/yt_sin0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP log_module/e_temp output log_module/e_temp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP log_module/e_temp__0 output log_module/e_temp__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP log_module/xc1t output log_module/xc1t/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP log_module/xc1t__0 output log_module/xc1t__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP log_module/xc1t__1 output log_module/xc1t__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP log_module/xx_bt output log_module/xx_bt/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP log_module/xx_bt__0 output log_module/xx_bt__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP log_module/xx_bt__1 output log_module/xx_bt__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP log_module/xx_bt__2 output log_module/xx_bt__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP log_module/xx_bt__3 output log_module/xx_bt__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP log_module/xxc2t output log_module/xxc2t/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP log_module/xxc2t__0 output log_module/xxc2t__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP sqrt_module/y_ft output sqrt_module/y_ft/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP awgn_out1__0 multiplier stage awgn_out1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP awgn_out2__0 multiplier stage awgn_out2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP cos_module/yt_cos0 multiplier stage cos_module/yt_cos0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP cos_module/yt_sin0 multiplier stage cos_module/yt_sin0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP log_module/e_temp multiplier stage log_module/e_temp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP log_module/e_temp__0 multiplier stage log_module/e_temp__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP log_module/xc1t multiplier stage log_module/xc1t/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP log_module/xc1t__0 multiplier stage log_module/xc1t__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP log_module/xc1t__1 multiplier stage log_module/xc1t__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP log_module/xx_bt multiplier stage log_module/xx_bt/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP log_module/xx_bt__0 multiplier stage log_module/xx_bt__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP log_module/xx_bt__1 multiplier stage log_module/xx_bt__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP log_module/xx_bt__2 multiplier stage log_module/xx_bt__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP log_module/xx_bt__3 multiplier stage log_module/xx_bt__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP log_module/xxc2t multiplier stage log_module/xxc2t/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP log_module/xxc2t__0 multiplier stage log_module/xxc2t__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP sqrt_module/y_ft multiplier stage sqrt_module/y_ft/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

PDRC-153#1 Warning
Gated clock check  
Net urng_a/s0_reg[10]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s0_reg[10]_LDC_i_1/O, cell urng_a/s0_reg[10]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#2 Warning
Gated clock check  
Net urng_a/s0_reg[11]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s0_reg[11]_LDC_i_1/O, cell urng_a/s0_reg[11]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#3 Warning
Gated clock check  
Net urng_a/s0_reg[12]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s0_reg[12]_LDC_i_1/O, cell urng_a/s0_reg[12]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#4 Warning
Gated clock check  
Net urng_a/s0_reg[12]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s0_reg[12]_LDC_i_1/O, cell urng_a/s0_reg[12]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#5 Warning
Gated clock check  
Net urng_a/s0_reg[6]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s0_reg[6]_LDC_i_1/O, cell urng_a/s0_reg[6]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#6 Warning
Gated clock check  
Net urng_a/s0_reg[7]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s0_reg[7]_LDC_i_1/O, cell urng_a/s0_reg[7]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#7 Warning
Gated clock check  
Net urng_a/s0_reg[7]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s0_reg[7]_LDC_i_1/O, cell urng_a/s0_reg[7]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#8 Warning
Gated clock check  
Net urng_a/s0_reg[8]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s0_reg[8]_LDC_i_1/O, cell urng_a/s0_reg[8]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#9 Warning
Gated clock check  
Net urng_a/s0_reg[9]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s0_reg[9]_LDC_i_1/O, cell urng_a/s0_reg[9]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#10 Warning
Gated clock check  
Net urng_a/s2_reg[10]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[10]_LDC_i_1/O, cell urng_a/s2_reg[10]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#11 Warning
Gated clock check  
Net urng_a/s2_reg[11]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[11]_LDC_i_1/O, cell urng_a/s2_reg[11]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#12 Warning
Gated clock check  
Net urng_a/s2_reg[12]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[12]_LDC_i_1/O, cell urng_a/s2_reg[12]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#13 Warning
Gated clock check  
Net urng_a/s2_reg[13]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[13]_LDC_i_1/O, cell urng_a/s2_reg[13]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#14 Warning
Gated clock check  
Net urng_a/s2_reg[14]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[14]_LDC_i_1/O, cell urng_a/s2_reg[14]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#15 Warning
Gated clock check  
Net urng_a/s2_reg[15]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[15]_LDC_i_1/O, cell urng_a/s2_reg[15]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#16 Warning
Gated clock check  
Net urng_a/s2_reg[15]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[15]_LDC_i_1/O, cell urng_a/s2_reg[15]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#17 Warning
Gated clock check  
Net urng_a/s2_reg[16]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[16]_LDC_i_1/O, cell urng_a/s2_reg[16]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#18 Warning
Gated clock check  
Net urng_a/s2_reg[17]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[17]_LDC_i_1/O, cell urng_a/s2_reg[17]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#19 Warning
Gated clock check  
Net urng_a/s2_reg[18]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[18]_LDC_i_1/O, cell urng_a/s2_reg[18]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#20 Warning
Gated clock check  
Net urng_a/s2_reg[19]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[19]_LDC_i_1/O, cell urng_a/s2_reg[19]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#21 Warning
Gated clock check  
Net urng_a/s2_reg[19]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[19]_LDC_i_1/O, cell urng_a/s2_reg[19]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#22 Warning
Gated clock check  
Net urng_a/s2_reg[20]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[20]_LDC_i_1/O, cell urng_a/s2_reg[20]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#23 Warning
Gated clock check  
Net urng_a/s2_reg[8]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[8]_LDC_i_1/O, cell urng_a/s2_reg[8]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#24 Warning
Gated clock check  
Net urng_a/s2_reg[8]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[8]_LDC_i_1/O, cell urng_a/s2_reg[8]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#25 Warning
Gated clock check  
Net urng_a/s2_reg[9]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin urng_a/s2_reg[9]_LDC_i_1/O, cell urng_a/s2_reg[9]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#26 Warning
Gated clock check  
Net urng_b/s0_reg[10]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s0_reg[10]_LDC_i_1__0/O, cell urng_b/s0_reg[10]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#27 Warning
Gated clock check  
Net urng_b/s0_reg[11]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s0_reg[11]_LDC_i_1__0/O, cell urng_b/s0_reg[11]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#28 Warning
Gated clock check  
Net urng_b/s0_reg[12]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s0_reg[12]_LDC_i_1__0/O, cell urng_b/s0_reg[12]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#29 Warning
Gated clock check  
Net urng_b/s0_reg[6]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s0_reg[6]_LDC_i_1__0/O, cell urng_b/s0_reg[6]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#30 Warning
Gated clock check  
Net urng_b/s0_reg[7]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s0_reg[7]_LDC_i_1__0/O, cell urng_b/s0_reg[7]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#31 Warning
Gated clock check  
Net urng_b/s0_reg[7]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s0_reg[7]_LDC_i_1__0/O, cell urng_b/s0_reg[7]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#32 Warning
Gated clock check  
Net urng_b/s0_reg[8]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s0_reg[8]_LDC_i_1__0/O, cell urng_b/s0_reg[8]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#33 Warning
Gated clock check  
Net urng_b/s0_reg[9]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s0_reg[9]_LDC_i_1__0/O, cell urng_b/s0_reg[9]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#34 Warning
Gated clock check  
Net urng_b/s2_reg[10]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[10]_LDC_i_1__0/O, cell urng_b/s2_reg[10]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#35 Warning
Gated clock check  
Net urng_b/s2_reg[11]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[11]_LDC_i_1__0/O, cell urng_b/s2_reg[11]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#36 Warning
Gated clock check  
Net urng_b/s2_reg[12]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[12]_LDC_i_1__0/O, cell urng_b/s2_reg[12]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#37 Warning
Gated clock check  
Net urng_b/s2_reg[13]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[13]_LDC_i_1__0/O, cell urng_b/s2_reg[13]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#38 Warning
Gated clock check  
Net urng_b/s2_reg[14]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[14]_LDC_i_1__0/O, cell urng_b/s2_reg[14]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#39 Warning
Gated clock check  
Net urng_b/s2_reg[15]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[15]_LDC_i_1__0/O, cell urng_b/s2_reg[15]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#40 Warning
Gated clock check  
Net urng_b/s2_reg[16]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[16]_LDC_i_1__0/O, cell urng_b/s2_reg[16]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#41 Warning
Gated clock check  
Net urng_b/s2_reg[17]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[17]_LDC_i_1__0/O, cell urng_b/s2_reg[17]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#42 Warning
Gated clock check  
Net urng_b/s2_reg[18]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[18]_LDC_i_1__0/O, cell urng_b/s2_reg[18]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#43 Warning
Gated clock check  
Net urng_b/s2_reg[19]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[19]_LDC_i_1__0/O, cell urng_b/s2_reg[19]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#44 Warning
Gated clock check  
Net urng_b/s2_reg[20]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[20]_LDC_i_1__0/O, cell urng_b/s2_reg[20]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#45 Warning
Gated clock check  
Net urng_b/s2_reg[8]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[8]_LDC_i_1__0/O, cell urng_b/s2_reg[8]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#46 Warning
Gated clock check  
Net urng_b/s2_reg[9]_LDC_i_1__0_n_0 is a gated clock net sourced by a combinational pin urng_b/s2_reg[9]_LDC_i_1__0/O, cell urng_b/s2_reg[9]_LDC_i_1__0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>


